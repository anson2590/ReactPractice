{"ast":null,"code":"var _jsxFileName = \"/Users/ag051861/react/react_basic_func/src/components/HigherOrderComponentsDemo/WithCounter.js\";\nimport React from 'react';\n\nconst UpdatedComponent = OriginalComponent => {\n  class NewComponent extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.incrementCount = () => {\n        this.setState(prevState => {\n          return {\n            count: prevState.count + 1\n          };\n        });\n      };\n\n      this.state = {\n        count: 0\n      };\n    }\n\n    render() {\n      return React.createElement(OriginalComponent, Object.assign({\n        count: this.state.count,\n        incrementCount: this.incrementCount\n      }, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }));\n    }\n\n  }\n\n  return NewComponent;\n};\n\nexport default UpdatedComponent;","map":{"version":3,"sources":["/Users/ag051861/react/react_basic_func/src/components/HigherOrderComponentsDemo/WithCounter.js"],"names":["React","UpdatedComponent","OriginalComponent","NewComponent","Component","constructor","props","incrementCount","setState","prevState","count","state","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,gBAAgB,GAAIC,iBAAD,IAAuB;AAC5C,QAAMC,YAAN,SAA2BH,KAAK,CAACI,SAAjC,CAA2C;AACvCC,IAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,YAAMA,KAAN;;AADe,WAOnBC,cAPmB,GAOF,MAAM;AACnB,aAAKC,QAAL,CAAcC,SAAS,IAAI;AACvB,iBAAO;AAAEC,YAAAA,KAAK,EAAED,SAAS,CAACC,KAAV,GAAkB;AAA3B,WAAP;AACH,SAFD;AAGH,OAXkB;;AAEf,WAAKC,KAAL,GAAa;AACTD,QAAAA,KAAK,EAAE;AADE,OAAb;AAGH;;AAQDE,IAAAA,MAAM,GAAG;AACL,aACI,oBAAC,iBAAD;AACI,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWD,KADtB;AAEI,QAAA,cAAc,EAAE,KAAKH;AAFzB,SAGQD,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SADJ;AAOH;;AAtBsC;;AAwB3C,SAAOH,YAAP;AACH,CA1BD;;AA4BA,eAAeF,gBAAf","sourcesContent":["import React from 'react';\n\nconst UpdatedComponent = (OriginalComponent) => {\n    class NewComponent extends React.Component {\n        constructor(props) {\n            super(props);\n            this.state = {\n                count: 0\n            };\n        }\n    \n        incrementCount = () => {\n            this.setState(prevState => {\n                return { count: prevState.count + 1 }\n            })\n        }\n\n        render() {\n            return(\n                <OriginalComponent \n                    count={this.state.count} \n                    incrementCount={this.incrementCount} \n                    {...props}\n                />\n            )\n        }\n    }\n    return NewComponent;\n}\n\nexport default UpdatedComponent;"]},"metadata":{},"sourceType":"module"}